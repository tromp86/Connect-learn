import { wordPairs } from "./wordPairs.js";

let filteredWordPairs = [...wordPairs]; // –ü–æ—á–∞—Ç–∫–æ–≤—ñ –ø–∞—Ä–∏
const batchSize = 5; // –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ª—ñ–≤ –≤ –æ–¥–Ω–æ–º—É —Ä–∞—É–Ω–¥—ñ
let shuffledPairs = shuffle([...filteredWordPairs]);
let currentIndex = 0;
let first = null;
let allCurrentWords = [];

let wrongAttempts = 0;
function updateWrongAttemptsDisplay() {
  const wrongCountSpan = document.getElementById("wrongCount");
  if (wrongCountSpan) {
    wrongCountSpan.textContent = wrongAttempts;
  }
}

const sectionLeft = document.querySelector(".sectionLeft");

const engColumn = document.createElement("div");
engColumn.className = "column";
sectionLeft.appendChild(engColumn);

const uaColumn = document.createElement("div");
uaColumn.className = "column";
sectionLeft.appendChild(uaColumn);

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –ø–µ—Ä–µ–º—ñ—à—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É
function shuffle(array) {
  let currentIndex = array.length,
    randomIndex;
  while (currentIndex !== 0) {
    randomIndex = Math.floor(Math.random() * currentIndex);
    currentIndex--;
    [array[currentIndex], array[randomIndex]] = [
      array[randomIndex],
      array[currentIndex],
    ];
  }
  return array;
}

// –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ª—ñ–≤ –∑–∞ —Ä—ñ–≤–Ω—è–º–∏
function updateWordPairsByLevel(level) {
  clearTimeout(window.updateTimeout);

  const circle = document.querySelector(".theme-circle");
  const spanLevel = document.querySelector(".spanLevel");

  window.updateTimeout = setTimeout(() => {
    const wordElements = document.querySelectorAll(".word");
    wordElements.forEach((wordElement) => {
      switch (level) {
        case "A1":
          wordElement.style.border = "1px solid #8fc8b3";
          circle.style.backgroundColor = "green";
          spanLevel.style.opacity = "1";
          break;
        case "B1":
          wordElement.style.border = "1px solid #dccb99";
          circle.style.backgroundColor = "yellow";
          spanLevel.style.opacity = "1";
          break;
        case "C1":
          wordElement.style.border = "1px solid #d9a2a8";
          circle.style.backgroundColor = "red";
          spanLevel.style.opacity = "1";
          break;
        default:
          wordElement.style.border = "0px solidrgb(255, 0, 0)";
          circle.style.backgroundColor = "grey";
          spanLevel.style.opacity = "1";
      }
    });
  }, 920);

  // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é flip –¥–ª—è –≤—Å—ñ—Ö –ø–æ—Ç–æ—á–Ω–∏—Ö –∫–∞—Ä—Ç–æ–∫
  allCurrentWords.forEach((card) => {
    card.classList.add("jello-horizontal");
  });

  // –ß–µ–∫–∞—î–º–æ 500–º—Å –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó, –ø–æ—Ç—ñ–º –∑–º—ñ–Ω—é—î–º–æ —Ç–µ–∫—Å—Ç –±—É–∫–≤
  setTimeout(() => {
    filteredWordPairs = wordPairs.filter((pair) => pair.level === level);
    shuffledPairs = shuffle([...filteredWordPairs]);
    currentIndex = 0;

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –¥–ª—è –∫–∞—Ä—Ç–æ–∫
    allCurrentWords.forEach((card, index) => {
      const wordPair = shuffledPairs[index]; // –ë–µ—Ä–µ–º–æ –ø–∞—Ä—É –∑—ñ —Å–ø–∏—Å–∫—É
      if (wordPair) {
        card.textContent = wordPair.en; // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç
      }
    });
  }, 700);

  // –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—É –ø–∞—Ä—É —á–µ—Ä–µ–∑ 1000–º—Å (–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤—Å—ñ—Ö –¥—ñ–π)
  setTimeout(() => {
    showCurrentPair();
    allCurrentWords.forEach((card) => {
      addInteractiveHoverEffect(card);
    });
  }, 900);
}

// –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∫–ª—ñ–∫—ñ–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫
document.querySelectorAll(".level-btn").forEach((btn) => {
  btn.addEventListener("click", function () {
    const level = this.getAttribute("data-level"); // –ó—á–∏—Ç—É—î–º–æ —Ä—ñ–≤–µ–Ω—å —ñ–∑ –∫–Ω–æ–ø–∫–∏
    updateWordPairsByLevel(level); // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä—ñ–≤–Ω—è
  });
});

// –ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –ø–∞—Ä—É —Å–ª—ñ–≤
function showCurrentPair() {
  // –Ø–∫—â–æ —Ä–∞–Ω—ñ—à–µ –±—É–ª–æ "–í—Å—ñ —Å–ª–æ–≤–∞ –≤–≥–∞–¥–∞–Ω—ñ!" ‚Äî –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–æ–ª–æ–Ω–∫–∏
  engColumn.style.display = "";
  uaColumn.style.display = "";

  engColumn.innerHTML = "";
  uaColumn.innerHTML = "";
  allCurrentWords = [];
  first = null;

  const learnedCount = Math.min(currentIndex, filteredWordPairs.length);
  const totalCount = filteredWordPairs.length;
  const progressPercent =
    totalCount > 0 ? Math.floor((learnedCount / totalCount) * 100) : 0;

  document.getElementById("batteryFill").style.width = `${progressPercent}%`;

  if (currentIndex >= shuffledPairs.length) {
    // –°—Ö–æ–≤–∞—Ç–∏ –∫–æ–ª–æ–Ω–∫–∏ –∑—ñ —Å–ª–æ–≤–∞–º–∏
    engColumn.style.display = "none";
    uaColumn.style.display = "none";

    // –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    const doneMsg = document.createElement("div");
    doneMsg.textContent = "üéâ –í—Å—ñ —Å–ª–æ–≤–∞ –≤–≥–∞–¥–∞–Ω—ñ!";
    doneMsg.style.fontSize = "46px";
    doneMsg.style.color = "green";
    doneMsg.style.fontWeight = "bold";
    doneMsg.style.textAlign = "center";
    doneMsg.style.fontFamily = "Play, sans-serif";
    doneMsg.style.textShadow = "2px 2px 5px rgba(0,0,0,0.2)";
    sectionLeft.appendChild(doneMsg);

    // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥–∏ ‚Äî –ø—Ä–∏–±—Ä–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –ø–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ —Å–ª–æ–≤–∞
    setTimeout(() => {
      doneMsg.remove();

      // –ü–æ–≤–µ—Ä–Ω—É—Ç–∏ –∫–æ–ª–æ–Ω–∫–∏
      engColumn.style.display = "flex";
      uaColumn.style.display = "flex";

      // –°–∫–∏–Ω—É—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä ‚Äî –ø–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ —Å–ª–æ–≤–∞
      filteredWordPairs = [...wordPairs];
      shuffledPairs = shuffle([...filteredWordPairs]);
      currentIndex = 0;
      showCurrentPair();

      allCurrentWords.forEach((card) => {
        addInteractiveHoverEffect(card);
      });
    }, 6000);
    return;
  }

  const currentBatch = shuffledPairs.slice(
    currentIndex,
    currentIndex + batchSize
  );

  currentBatch.forEach((pair) => {
    const engWord = document.createElement("div");
    engWord.className = "word";
    engWord.textContent = pair.en;
    engWord.dataset.word = pair.en;
    engWord.dataset.lang = "en";

    const uaWord = document.createElement("div");
    uaWord.className = "word";
    uaWord.textContent = pair.ua;
    uaWord.dataset.word = pair.ua;
    uaWord.dataset.lang = "ua";

    allCurrentWords.push(engWord, uaWord);
  });

  // –ü–µ—Ä–µ–º—ñ—à–∞—Ç–∏ —ñ –¥–æ–¥–∞—Ç–∏ –≤ –∫–æ–ª–æ–Ω–∫–∏
  shuffle(allCurrentWords).forEach((div) => {
    if (div.dataset.lang === "en") {
        engColumn.appendChild(div);
    } else {
        uaColumn.appendChild(div);
    }

    div.addEventListener("click", () => {
        if (div.classList.contains("matched") || div === first) return;

        div.classList.add("selected");

        if (!first) {
            first = div;
        } else {
            const word1 = first.dataset.word;
            const lang1 = first.dataset.lang;
            const word2 = div.dataset.word;
            const lang2 = div.dataset.lang;

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ –≤–∏–±—Ä–∞–Ω—ñ —Å–ª–æ–≤–∞ –º–∞—é—Ç—å —Ä—ñ–∑–Ω—ñ –º–æ–≤–∏
            if (lang1 !== lang2) {
                const isMatch = wordPairs.some(
                    (p) =>
                        (p.en === word1 && p.ua === word2) ||
                        (p.en === word2 && p.ua === word1)
                );

                const firstCopy = first;
                const secondCopy = div;

                if (isMatch) {
                    firstCopy.classList.remove("selected");
                    secondCopy.classList.remove("selected");
                    firstCopy.classList.add("matched");
                    secondCopy.classList.add("matched");

                    const allMatched = allCurrentWords.every((el) =>
                        el.classList.contains("matched")
                    );
                    if (allMatched) {
                        setTimeout(() => {
                            currentIndex += batchSize;
                            showCurrentPair();
                        }, 50);
                    } else {
                        first = null;
                    }
                } else {
                    // –¢—ñ–ª—å–∫–∏ —è–∫—â–æ —Å–ª–æ–≤–∞ —Ä—ñ–∑–Ω–∏—Ö –º–æ–≤ —ñ –Ω–µ–≤–≥–∞–¥–∞–Ω—ñ, –∑–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫
                    firstCopy.classList.add("wrong");
                    secondCopy.classList.add("wrong");
                    wrongAttempts += 1;
                    updateWrongAttemptsDisplay();

                    setTimeout(() => {
                        firstCopy.classList.remove("selected", "wrong");
                        secondCopy.classList.remove("selected", "wrong");
                        first = null;
                        updateRating();
                    }, 500);
                }
            } else {
                // –Ø–∫—â–æ –æ–±–∏–¥–≤–∞ —Å–ª–æ–≤–∞ –æ–¥–Ω–æ–≥–æ –º–æ–≤–Ω–æ–≥–æ —Ç–∏–ø—É, –ø—Ä–æ—Å—Ç–æ —Å–∫–∏–¥–∞—î–º–æ –≤–∏–±—ñ—Ä
                first.classList.remove("selected");
                div.classList.remove("selected");
                first = null;
            }
        }
    });
});

}

// –î–æ–¥–∞–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ä—ñ–≤–Ω—ñ–≤
document.querySelectorAll(".level-btn").forEach((button) => {
  button.addEventListener("click", () => {
    const selectedLevel = button.dataset.level;
    updateWordPairsByLevel(selectedLevel);
  });
});

window.onload = () => {
  setTimeout(() => {
    showCurrentPair();
  }, 500); // –ó–∞—Ç—Ä–∏–º–∫–∞ 1 —Å–µ–∫—É–Ω–¥–∞
};

const sectionRight = document.querySelector(".sectionRight");
function updateRating() {
  sectionRight.innerHTML = "";

  const ratings = [
    // { max: 1, emoji: "üåü", message: "–ü–æ–∫–∞–∂–∏ –Ω–∞ —â–æ —Ç–∏ –∑–¥–∞—Ç–Ω–∏–π!" },
    // { max: 2, emoji: "üéØ", message: "–ü–æ—á–∞—Ç–æ–∫ –±–∞–≥–∞—Ç–æ–æ–±—ñ—Ü—è—é—á–∏–π!" },
    // { max: 3, emoji: "üôÇ", message: "–ù—É, —Ç–∏ —Ç–æ—á–Ω–æ –Ω–µ –Ω–æ–≤–∞—á–æ–∫!" },
    // { max: 4, emoji: "üìò", message: "–í–∂–µ —â–æ—Å—å –∑–≥–∞–¥—É—î—à." },
    // { max: 5, emoji: "üßê", message: "–ù–µ –≤—Å–µ —Ç–∞–∫ –ø–æ–≥–∞–Ω–æ." },
    // { max: 6, emoji: "üòê", message: "–•–º–º... –Ω–µ —Ç–∞–∫ —É–∂–µ –π –∫—Ä—É—Ç–æ." },
    // { max: 7, emoji: "ü§ì", message: "–ú–æ–∂–µ —â–µ —Ä–∞–∑ –ø–µ—Ä–µ—á–∏—Ç–∞—Ç–∏?" },
    // { max: 8, emoji: "üò¨", message: "–¢–∏ —Ö–æ—á –≤—á–∏–≤ —Ü—ñ —Å–ª–æ–≤–∞?" },
    // { max: 9, emoji: "üìñ", message: "–î–µ—Å—å –±–∞—á–∏–≤ —Ü—ñ —Å–ª–æ–≤–∞, –µ–≥–µ –∂?" },
    // { max: 10, emoji: "üòµ", message: "–ú–∞–±—É—Ç—å, —Ç–∏ –≤—ñ–¥–∫—Ä–∏–≤ —Å–ª–æ–≤–Ω–∏–∫ –Ω–∞–≤–º–∞–Ω–Ω—è?" },
    // { max: 11, emoji: "ü•¥", message: "–û—á–µ–≤–∏–¥–Ω–æ, –¥–µ–Ω—å –±—É–≤ –≤–∞–∂–∫–∏–π." },
    // { max: 12, emoji: "ü§î", message: "–ê–Ω–≥–ª—ñ–π—Å—å–∫–∞ ‚Äî –Ω–µ —Ç–≤–æ—î?" },
    // { max: 13, emoji: "üôÑ", message: "–ù—É —Ç–∏ –¥–∞—î—à..." },
    // { max: 14, emoji: "ü•±", message: "–ú–æ–∂–µ, –≤–∞—Ä—Ç–æ –ø—Ä–æ–∫–∏–Ω—É—Ç–∏—Å—å?" },
    // { max: 15, emoji: "ü´†", message: "–¢–∞–Ω–µ —Ç–≤–æ—è –ø–∞–º º—è—Ç—å, —è–∫ –º–æ—Ä–æ–∑–∏–≤–æ." },
    // { max: 16, emoji: "üòì", message: "–î–µ—Å—å –ø–æ–º—ñ–∂ –≤—É—Ö –∑–∞–≥—É–±–∏–≤—Å—è —Å–ª–æ–≤–Ω–∏–∫." },
    // { max: 17, emoji: "ü§ñ", message: "–ù–∞–≤—ñ—Ç—å —Ä–æ–±–æ—Ç –ø–æ–º–∏–ª–∏–≤—Å—è –± –º–µ–Ω—à–µ." },
    // { max: 18, emoji: "üòë", message: "–ë–µ–∑ –µ–º–æ—Ü—ñ–π, —è–∫ —Ç–≤—ñ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç." },
    // { max: 19, emoji: "üôÉ", message: "–í—Å–µ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É–ª–æ—Å—å –∑ –Ω—ñ–≥ –Ω–∞ –≥–æ–ª–æ–≤—É." },
    // { max: 20, emoji: "üòï", message: "–¶–µ –±—É–≤ —Ç–µ—Å—Ç? –ê —è –¥—É–º–∞–≤, –≥—Ä–∞." },
    // { max: 21, emoji: "ü´£", message: "–ù–∞–≤—ñ—Ç—å –Ω–µ –∑–Ω–∞—é, —è–∫ –∫–æ–º–µ–Ω—Ç—É–≤–∞—Ç–∏." },
    // { max: 22, emoji: "üß†", message: "–ú–æ–∑–æ–∫... –ø—ñ–¥ º—î–¥–Ω–∞–Ω–æ –Ω–µ–≤—ñ—Ä–Ω–æ." },
    // { max: 23, emoji: "üéÉ", message: "–ì–∞—Ä–±—É–∑ –Ω–∞ –ø–ª–µ—á–∞—Ö –∑–∞–º—ñ—Å—Ç—å –≥–æ–ª–æ–≤–∏?" },
    // { max: 24, emoji: "üëÄ", message: "–¢–∏ –≤–∑–∞–≥–∞–ª—ñ –±–∞—á–∏–≤ —Ü—ñ —Å–ª–æ–≤–∞ —Ä–∞–Ω—ñ—à–µ?" },
    // { max: 25, emoji: "üßå", message: "–ú–æ–≤–Ω–µ —á—É–¥–æ–≤–∏—Å—å–∫–æ –≤ –¥—ñ—ó." },
    // { max: 26, emoji: "üê¢", message: "–ü–æ–≤—ñ–ª—å–Ω–æ —ñ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ." },
    // { max: 27, emoji: "üêå", message: "–©–µ –ø–æ–≤—ñ–ª—å–Ω—ñ—à–µ —ñ —â–µ –º–µ–Ω—à –ø—Ä–∞–≤–∏–ª—å–Ω–æ." },
    // { max: 28, emoji: "üí§", message: "–ó–¥–∞—î—Ç—å—Å—è, —Ç–∏ —Å–ø–∏—à." },
    // { max: 29, emoji: "ü§°", message: "–¢—Ä–æ—à–∫–∏ –∫–ª–æ—É–Ω–∞–¥–∏ –Ω–µ –∑–∞–≤–∞–¥–∏—Ç—å." },
    // { max: 30, emoji: "üé≠", message: "–í–∏—Å—Ç–∞–≤–∞ –ø—Ä–æ–≤–∞–ª–µ–Ω–∞." },
    // { max: 31, emoji: "üí©", message: "–©–æ—Å—å –ø—ñ—à–ª–æ –¥—É–∂–µ –Ω–µ —Ç–∞–∫." },
    // { max: 32, emoji: "ü™¶", message: "–ú–æ–≤–Ω—ñ –∑–Ω–∞–Ω–Ω—è –ø–æ–º–µ—Ä–ª–∏." },
    // { max: 33, emoji: "üßü‚Äç‚ôÇÔ∏è", message: "–ó–Ω–∞–Ω–Ω—è –∑–æ–º–±—ñ-—Ä–µ–∂–∏–º—É." },
    // { max: 34, emoji: "üîö", message: "–ö—ñ–Ω–µ—Ü—å ‚Äî —è–∫ —É —Å–µ—Ä—ñ–∞–ª—É –±–µ–∑ —Ñ—ñ–Ω–∞–ª—É." },
    // { max: 35, emoji: "üìâ", message: "–ü–∞–¥–∞—î—à, —è–∫ —Ä–∏–Ω–æ–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç." },
    // { max: 36, emoji: "üöΩ", message: "–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–ª–∏–≤—Å—è..." },
    // { max: 37, emoji: "üï≥Ô∏è", message: "–í—Å—ñ –∑–Ω–∞–Ω–Ω—è –∫—É–¥–∏—Å—å –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å." },
    // { max: 38, emoji: "üé≤", message: "–ú–æ–∂–µ, —Ç–∏ –ø—Ä–æ—Å—Ç–æ –≥—Ä–∞–≤ —É –≤–¥–∞—á—É?" },
    // { max: 39, emoji: "üé¨", message: "–°—Ü–µ–Ω–∞ –ø–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–ª—É." },
    // { max: 40, emoji: "ü•∏", message: "–ü—Ä–∏–∫–∏–¥–∞—î—à—Å—è, —â–æ –∑–Ω–∞—î—à?" },
    // { max: 41, emoji: "ü™´", message: "–†—ñ–≤–µ–Ω—å –∑–Ω–∞–Ω—å: –±–∞—Ç–∞—Ä–µ—è —Ä–æ–∑—Ä—è–¥–∂–µ–Ω–∞." },
    // { max: 42, emoji: "‚ö†Ô∏è", message: "–ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è: –∫—Ä–∏—Ç–∏—á–Ω–∏–π —Ä—ñ–≤–µ–Ω—å." },
    // { max: 43, emoji: "üßØ", message: "–ì–æ—Ä–∏—Ç—å! –í—á–∏ —Å–ª–æ–≤–∞!" },
    // { max: 44, emoji: "üßª", message: "–¶–µ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–æ–∂–Ω–∞ –∑–º–∏—Ç–∏." },
    // { max: 45, emoji: "üóëÔ∏è", message: "–ö—Ä–∞—â–µ –ø–æ—á–∞—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É." },
    // { max: 46, emoji: "üö´", message: "–ú–æ–≤–∞ –≤—ñ–¥–º–æ–≤–ª—è—î—Ç—å—Å—è –∑ —Ç–æ–±–æ—é –≥–æ–≤–æ—Ä–∏—Ç–∏." },
    // { max: 47, emoji: "üìõ", message: "–†–µ–∂–∏–º —Å–∞–º–æ–∑–Ω–∏—â–µ–Ω–Ω—è –∑–Ω–∞–Ω—å –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ." },
    // { max: 48, emoji: "üìµ", message: "–ó–∞–±–æ—Ä–æ–Ω–µ–Ω–æ –∑–Ω–∞—Ç–∏ —Ç–∞–∫ –º–∞–ª–æ!" },
    // { max: 49, emoji: "ü§Ø", message: "–ú–æ–∑–æ–∫ –≤–∏–±—É—Ö–Ω—É–≤ –≤—ñ–¥ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–µ–π." },
    { max: 1, emoji: "üåü", message: "–ü–æ–∫–∞–∂–∏ –Ω–∞ —â–æ —Ç–∏ –∑–¥–∞—Ç–Ω–∏–π!" },
    { max: 2, emoji: "üéØ", message: "–ú–∞–π–∂–µ –±–µ–∑–¥–æ–≥–∞–Ω–Ω–æ, —á—ñ—Ç–∫–æ –ø–æ —Ü—ñ–ª—ñ!" },
    { max: 3, emoji: "üôÇ", message: "–ù—É, —Ç–∏ —Ç–æ—á–Ω–æ –Ω–µ –Ω–æ–≤–∞—á–æ–∫ —É –∑'—î–¥–Ω–∞–Ω–Ω—ñ!" },
    {
      max: 4,
      emoji: "üìò",
      message: "–í–∂–µ —â–æ—Å—å –∑–≥–∞–¥—É—î—à, –º–∞–π–∂–µ –≤—Å—ñ –ø–∞—Ä–∏ –≤ —Ç–æ—á–∫—É.",
    },
    {
      max: 5,
      emoji: "üßê",
      message: "–ù–µ –≤—Å–µ —Ç–∞–∫ –ø–æ–≥–∞–Ω–æ ‚Äî –¥–µ—Å—å –≤–ª—É—á–∏–≤, –¥–µ—Å—å –Ω—ñ.",
    },
    { max: 6, emoji: "üòê", message: "–•–º–º... –∑–≤‚Äô—è–∑–∫–∏ –Ω–µ –Ω–∞–¥—Ç–æ –º—ñ—Ü–Ω—ñ —Å—å–æ–≥–æ–¥–Ω—ñ." },
    { max: 7, emoji: "ü§ì", message: "–ú–æ–∂–µ —â–µ —Ä–∞–∑ –≥–ª—è–Ω—É—Ç–∏ –Ω–∞ –ø–∞—Ä–∏?" },
    { max: 8, emoji: "üò¨", message: "–¢–∏ —Ö–æ—á –ø–µ—Ä–µ–≤—ñ—Ä—è–≤, —â–æ –∑ —á–∏–º –∑‚Äô—î–¥–Ω—É—î—à?" },
    {
      max: 9,
      emoji: "üìñ",
      message: "–ú–æ–∂–µ, —â–æ—Å—å —ñ –±–∞—á–∏–≤ —Ä–∞–Ω—ñ—à–µ, –∞–ª–µ —â–æ –∑ —á–∏–º?",
    },
    {
      max: 10,
      emoji: "üòµ",
      message: "–ó–¥–∞—î—Ç—å—Å—è, —Ç–∏ –Ω–∞–≤–º–∞–Ω–Ω—è —Ç—è–≥–Ω—É–≤ —Å—Ç—Ä—ñ–ª–∫–∏...",
    },
    {
      max: 11,
      emoji: "ü•¥",
      message: "–ú–æ–∑–æ–∫ —Ç—Ä–æ—Ö–∏ –ø–æ–ø–ª–∏–≤ ‚Äî –ø–ª—É—Ç–∞–Ω–∏–Ω–∞ –∑‚Äô—î–¥–Ω–∞–Ω—å.",
    },
    { max: 12, emoji: "ü§î", message: "–¶–µ —Ç–æ—á–Ω–æ –∞–Ω–≥–ª—ñ–π—Å—å–∫–∞, –∞ –Ω–µ —Ä–µ–±—É—Å?" },
    { max: 13, emoji: "üôÑ", message: "–ú–¥–∞... —Ü–µ –±—É–ª–∏ –¥—É–∂–µ —Ç–≤–æ—Ä—á—ñ –ø–∞—Ä–∏ üòÖ" },
    {
      max: 14,
      emoji: "ü•±",
      message: "–ó —Ç–∞–∫–∏–º —Ç–µ–º–ø–æ–º –ø–∞—Ä–∏ —Å–∞–º—ñ –Ω–µ —Å–∫–ª–∞–¥—É—Ç—å—Å—è.",
    },
    { max: 15, emoji: "ü´†", message: "–¢–≤–æ—ó –∑–≤‚Äô—è–∑–∫–∏ ‚Äî —è–∫ –º–æ—Ä–æ–∑–∏–≤–æ –Ω–∞ —Å–æ–Ω—Ü—ñ." },
    {
      max: 16,
      emoji: "üòì",
      message: "–î–µ—Å—å –∑–≥—É–±–∏–≤—Å—è –º—ñ–∂ —Å–ª–æ–≤–∞–º–∏ –π –ø–µ—Ä–µ–∫–ª–∞–¥–∞–º–∏.",
    },
    { max: 17, emoji: "ü§ñ", message: "–ù–∞–≤—ñ—Ç—å —à—Ç—É—á–Ω–∏–π —ñ–Ω—Ç–µ–ª–µ–∫—Ç –ø–ª–∞–∫–∞–≤ –±–∏..." },
    { max: 18, emoji: "üòë", message: "–ó–≤‚Äô—è–∑–∫–∏ –±–µ–∑ –µ–º–æ—Ü—ñ–π, —è–∫ —ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç." },
    {
      max: 19,
      emoji: "üôÉ",
      message: "–ü–µ—Ä–µ–ø–ª—É—Ç–∞–≤ —É—Å–µ: –≤–µ—Ä—Ö, –Ω–∏–∑, –ø—Ä–∞–≤–µ, –ª—ñ–≤–µ...",
    },
    { max: 20, emoji: "üòï", message: "–¢–∏ —Å–ª–æ–≤–∞ –≥—Ä–∞–≤, –∞ –Ω–µ –≤—á–∏–≤?" },
    { max: 21, emoji: "ü´£", message: "–ú–∞–±—É—Ç—å, –∫—Ä–∞—â–µ –ø—Ä–æ–º–æ–≤—á–∞—Ç–∏ –ø—Ä–æ —Ü—ñ –ø–∞—Ä–∏..." },
    { max: 22, emoji: "üß†", message: "–ú–æ–∑–æ–∫ –∑'—î–¥–Ω–∞–≤ –Ω–µ —Ç—ñ –¥—Ä–æ—Ç–∏." },
    {
      max: 23,
      emoji: "üéÉ",
      message: "–ì–∞—Ä–±—É–∑ –Ω–∞ –ø–ª–µ—á–∞—Ö –Ω–µ –¥–æ–ø–æ–º—ñ–≥ —ñ–∑ –ø–µ—Ä–µ–∫–ª–∞–¥–æ–º.",
    },
    { max: 24, emoji: "üëÄ", message: "–¢–∏ —Ç–æ—á–Ω–æ –∫–æ–ª–∏—Å—å –±–∞—á–∏–≤ —Ü—ñ —Å–ª–æ–≤–∞, —Ç–∞–∫?" },
    {
      max: 25,
      emoji: "üßå",
      message: "–ú–æ–≤–Ω–µ —á—É–¥–æ–≤–∏—Å—å–∫–æ –Ω–∞ –ø–æ–ª—é–≤–∞–Ω–Ω—ñ –∑–∞ –ø–∞—Ä–∞–º–∏!",
    },
    { max: 26, emoji: "üê¢", message: "–ü–æ–≤—ñ–ª—å–Ω–æ —ñ –Ω–µ –≤ —Ç–æ–π –±—ñ–∫." },
    { max: 27, emoji: "üêå", message: "–©–µ –ø–æ–≤—ñ–ª—å–Ω—ñ—à–µ —ñ —â–µ –±—ñ–ª—å—à —Ö–∏–±–Ω–æ..." },
    { max: 28, emoji: "üí§", message: "–ú–æ–∂–µ, –ø—Ä–æ–∫–∏–Ω—å—Å—è –π —Å–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑?" },
    { max: 29, emoji: "ü§°", message: "–í–µ—Å–µ–ª–æ, –∞–ª–µ –Ω–µ —Ç–æ—á–Ω–æ..." },
    { max: 30, emoji: "üé≠", message: "–¶—è –≤–∏—Å—Ç–∞–≤–∞ –ø—Ä–æ –Ω–µ–≤—ñ—Ä–Ω—ñ –∑‚Äô—î–¥–Ω–∞–Ω–Ω—è." },
    { max: 31, emoji: "üí©", message: "–ó'—î–¥–Ω–∞–≤ —Ç–∞–∫, —â–æ –π —Å–ª–æ–≤–∞ –∑–ª—è–∫–∞–ª–∏—Å—å." },
    { max: 32, emoji: "ü™¶", message: "–°–ª–æ–≤–Ω–∏–∫–æ–≤–∏–π –∑–∞–ø–∞—Å –ø—ñ—à–æ–≤ —Å–ø–æ—á–∏–≤–∞—Ç–∏..." },
    { max: 33, emoji: "üßü‚Äç‚ôÇÔ∏è", message: "–ü–∞—Ä–∏ –∂–∏–≤—ñ... –∞–ª–µ —è–∫ –∑–æ–º–±—ñ." },
    { max: 34, emoji: "üîö", message: "–¶–µ –±—É–≤ —Ñ—ñ–Ω–∞–ª –±–µ–∑ —â–∞—Å–ª–∏–≤–æ–≥–æ –∫—ñ–Ω—Ü—è." },
    { max: 35, emoji: "üìâ", message: "–ó–Ω–∞–Ω–Ω—è –ø–∞–¥–∞—é—Ç—å —à–≤–∏–¥—à–µ –∑–∞ –±—ñ—Ç–∫–æ—ó–Ω." },
    { max: 36, emoji: "üöΩ", message: "–í—Å—ñ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑–ª–∏–ª–∏—Å—å —É –Ω—ñ–∫—É–¥–∏." },
    { max: 37, emoji: "üï≥Ô∏è", message: "–ö—É–¥–∏ –ø–æ–¥—ñ–ª–∏—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –ø–∞—Ä–∏?" },
    { max: 38, emoji: "üé≤", message: "–¶–µ –±—É–ª–∞ –≥—Ä–∞ –Ω–∞ –≤–¥–∞—á—É?" },
    {
      max: 39,
      emoji: "üé¨",
      message: "–°—Ü–µ–Ω–∞ –ø—Ä–æ–≤–∞–ª—É: –≥–æ–ª–æ–≤–Ω–∏–π –≥–µ—Ä–æ–π ‚Äî –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ –∑'—î–¥–Ω–∞–Ω–Ω—è.",
    },
    { max: 40, emoji: "ü•∏", message: "–ü—Ä–∏–∫–∏–¥–∞—î—à—Å—è, —â–æ –≤—Å–µ –∑–Ω–∞–≤?" },
    {
      max: 41,
      emoji: "ü™´",
      message: "–ú–æ–∑–æ–∫ —Ä–æ–∑—Ä—è–¥–∂–µ–Ω–æ ‚Äî –∂–æ–¥–Ω–æ—ó –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó –ø–∞—Ä–∏.",
    },
    {
      max: 42,
      emoji: "‚ö†Ô∏è",
      message: "–ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è! –ù–µ–±–µ–∑–ø–µ—á–Ω–∏–π —Ä—ñ–≤–µ–Ω—å –ø–æ–º–∏–ª–æ–∫.",
    },
    { max: 43, emoji: "üßØ", message: "–ü–∞–ª–∞—î –≤—ñ–¥ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –∑‚Äô—î–¥–Ω–∞–Ω—å!" },
    { max: 44, emoji: "üßª", message: "–¶–µ –º–æ–∂–Ω–∞ —Å—Ç–µ—Ä—Ç–∏... —ñ –∑–∞–±—É—Ç–∏." },
    { max: 45, emoji: "üóëÔ∏è", message: "–ö—Ä–∞—â–µ –ø–æ—á–∞—Ç–∏ –≤—Å–µ —Å–ø–æ—á–∞—Ç–∫—É." },
    { max: 46, emoji: "üö´", message: "–ê–Ω–≥–ª—ñ–π—Å—å–∫–∞ –≤—ñ–¥–º–æ–≤–ª—è—î—Ç—å—Å—è –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏." },
    { max: 47, emoji: "üìõ", message: "–ê–∫—Ç–∏–≤–∞—Ü—ñ—è —Ä–µ–∂–∏–º—É —Å–∞–º–æ–∑–Ω–∏—â–µ–Ω–Ω—è –ø–∞—Ä." },
    { max: 48, emoji: "üìµ", message: "–ó–∞–±–æ—Ä–æ–Ω–µ–Ω–æ –∑'—î–¥–Ω—É–≤–∞—Ç–∏ —Ç–∞–∫ –±–µ–∑–≥–ª—É–∑–¥–æ!" },
    { max: 49, emoji: "ü§Ø", message: "–¢–≤—ñ–π –º–æ–∑–æ–∫ —ñ —Å–ª–æ–≤–∞ ‚Äî –∞–Ω—Ç–∏–ø–æ–¥–∏." },
    {
      max: Infinity,
      emoji: "üíÄ",
      message: "–ü–æ–≤–Ω–∏–π –º–æ—Ä–æ–∫. –ü–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è ‚Äî –º–∞—Ç–∏ –Ω–∞–≤—á–∞–Ω–Ω—è!",
    },
  ];

  const rating = ratings.find((r) => wrongAttempts <= r.max);

  const emojiDiv = document.createElement("div");
  emojiDiv.className = "emoji"; // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å —ñ –∞–Ω—ñ–º–∞—Ü—ñ—é
  emojiDiv.textContent = rating.emoji;

  const textDiv = document.createElement("div");
  textDiv.className = "fancy-message"; // –î–æ–¥–∞—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π –∫–ª–∞—Å
  textDiv.innerHTML = `<span class="text-flip">${rating.message}</span>`;

  // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ —É sectionRight
  sectionRight.appendChild(emojiDiv);
  sectionRight.appendChild(textDiv);

  // ‚ùå –ü–æ–º–∏–ª–∫–æ–≤—ñ —Å–ø—Ä–æ–±–∏
  const wrongBox = document.createElement("div");
  wrongBox.className = "wrong-box";
  wrongBox.innerHTML = `<div class="label">–ü–æ–º–∏–ª–∫–æ–≤–∏—Ö —Å–ø—Ä–æ–±:</div> <div id="wrongCount">${wrongAttempts}</div>`;
  sectionRight.appendChild(wrongBox);
}

updateRating(); // –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω

document.getElementById("themeToggle").addEventListener("click", function () {
  const body = document.body;

  if (body.dataset.theme === "dark") {
    body.dataset.theme = "light";
    localStorage.setItem("theme", "light"); // üîê –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–µ–º—É
    console.log("light");
  } else {
    body.dataset.theme = "dark";
    localStorage.setItem("theme", "dark"); // üîê –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–µ–º—É
    console.log("dark");
  }
});

window.addEventListener("DOMContentLoaded", () => {
  const savedTheme = localStorage.getItem("theme");
  if (savedTheme) {
    document.body.dataset.theme = savedTheme;
  }
});

function addInteractiveHoverEffect(card) {
  card.addEventListener("mousemove", (e) => {
    const rect = card.getBoundingClientRect();
    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;
    const centerX = rect.width / 2;
    const centerY = rect.height / 2;

    const offsetX = (centerX - x) / centerX;
    const offsetY = (centerY - y) / centerY;

    const rotateX = -offsetY * 4;
    const rotateY = offsetX * 4;
    const moveX = offsetX * 3;
    const moveY = offsetY * 3;

    card.style.transform = `translate(${moveX}px, ${moveY}px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;
  });

  card.addEventListener("mouseleave", () => {
    card.style.transform = "translate(0, 0) rotateX(0) rotateY(0) scale(1)";
  });
}
setTimeout(() => {
  allCurrentWords.forEach((card) => {
    addInteractiveHoverEffect(card);
  });
}, 510);